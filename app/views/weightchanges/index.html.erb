<div class="container">
  <!--Navbar-->
  <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
    <div class="container-fluid">
      <div class="navbar-wrapper">
        <a class="navbar-brand" href="javascript:;">WeightRecord</a>
      </div>
      <%= render 'users/users' %>
    </div>
  </nav>
  
  <% if current_user.idealweight.present? %>
    <!--今日の体重が未入力の場合ポップアップを出し入力を促す-->
    <% if @weightchange_today.blank? %>
    <div class="popup" id="js-popup">
      <div class="popup-inner">
        <div class="close-btn" id="js-close-btn"><i class="fas fa-times"></i></div>
        <div class="card-body text-center">
          <h5>本日の体重を入力しよう!!</h5>
          <%= link_to new_weightchange_path, class: 'btn btn-primary' do %>
            <i class="material-icons">monitor_weight</i>
            体重を記録する
          <% end %>
        </div>
      </div>
      <div class="black-background" id="js-black-bg"></div>
    </div>
    <% end %>
    
    <div class="row">
      <div class="col-md-6">
        <div class="card card-stats">
          <div class="card-header card-header-default card-header-icon">
            <div class="card-icon">
              <i class="material-icons">monitor_weight</i>
            </div>
            <p class="card-category">直近体重 / 目標体重</p>
            <% if @weight_last.present? %>
            <h3 class="card-title"><%= @weight_last.todayweight %> / <%= current_user.idealweight.targetweight %> <small>Kg</small></h3>
            <% else %>
            <h3 class="card-title">  / <%= current_user.idealweight.targetweight %> <small>Kg</small></h3>
            <% end %>
          </div>
          <div class="card-footer">
            <div class="stats">
              <i class="material-icons text-info">event_note</i>
              <% if @weightchange_today.present? %>
              <span><%= current_user.idealweight.weight %> Kg start</span>
              <% else %>
              <span>本日の体重が未入力です。<%= link_to "こちら", new_weightchange_path, class: "" %>よりご入力ください。</span>
              <% end %>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="card card-stats">
          <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
              <i class="material-icons">sports_score</i>
            </div>
            <p class="card-category">推移目標</p>
            <% if current_user.idealweight.targetweight < current_user.idealweight.weight %>
              <h3 class="card-title"><%= current_user.idealweight.period %> <small>日で</small> <%= current_user.idealweight.weight - current_user.idealweight.targetweight %> <small>Kg落とす</small></h3>
              <small class="text-danger">1日あたり<%= current_user.idealweight.minusweight_day.ceil(2).to_f %> Kg調整する</small>
            <% else %>
              <h3 class="card-title"><%= current_user.idealweight.period %> <small>日で</small> <%= current_user.idealweight.targetweight - current_user.idealweight.weight %> <small>Kg増やす</small></h3>
            <% end %>
          </div>
          <div class="card-footer">
            <div class="stats">
              <i class="material-icons text-info">event_note</i>
              <%= link_to "目標体重を見直す", idealweight_path(current_user.idealweight) %>
            </div>
            </div>
        </div>
      </div>
    </div>
    <!--Table-->
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header card-header-primary card-header-icon">
            <div class="card-icon">
              <i class="material-icons">assignment</i>
            </div>
            <h4 class="card-title">WeightRecord</h4>
          </div>
          <div class="card-body">
            <div class="toolbar text-right">
              <!--本来はこんな感じでdatarangepicker使ってカッコよく日付検索したい-->
              <!--<div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 35%">-->
              <!--  <i class="fa fa-calendar"></i>&nbsp;-->
              <!--  <span></span> <i class="fa fa-caret-down"></i>-->
              <!--</div>-->
              <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                  <i class="material-icons">search</i> DataSearch
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                  <%= form_with(scope: :search, url: weightchanges_path, method: :get, local: true) do |f| %>
                    <div class="row">
                      <div class="col-md-10 ml-auto mr-auto pt-2">
                        <%= f.label :期間を指定する（初め）, class: "bmd-label-floating" %>
                        <%= f.date_field :date_from, value: @search_params[:date_from], class: 'form-control' %>
                      </div>
                      <div class="col-md-10 ml-auto mr-auto">
                        <%= f.label :（終わり）, class: "bmd-label-floating" %>
                        <%= f.date_field :date_to, value: @search_params[:date_to], class: 'form-control' %>
                      </div>
                      <div class="col-md-10 ml-auto mr-auto pb-2">
                        <%= f.submit "Search", class: "btn btn-raised btn-default" %>
                      </div>
                    </div>
                  <% end %>
                  <div class="row">
                    <div class="col-md-10 ml-auto mr-auto">
                    <p class="text-muted">ボディメイク期間履歴</p>
                    </div>
                    <div class="col-md-10 ml-auto mr-auto">
                    <% @idealweight_history.each do |idealweight| %>
                      <%= idealweight.start_day %> ~ <%= idealweight.last_day %>
                      <br>
                    <% end %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="material-datatables">
              <table id="datatables" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                <thead>
                  <tr>
                    <th>測定日</th>
                    <th>体重</th>
                    <th>期待値</th>
                    <th class="disabled-sorting text-right">Actions</th>
                  </tr>
                </thead>
                <tfoot>
                  <tr>
                    <th>測定日</th>
                    <th>体重</th>
                    <th>期待値</th>
                    <th class="text-right">Actions</th>
                  </tr>
                </tfoot>
                <tbody>
                  <% @weightchanges.each do |weightchange| %>
                    <tr>
                      <td><%= weightchange.date %></td>
                      <td><%= weightchange.todayweight %>Kg</td>
                      <td><%= weightchange.expected_weight %>Kg</td>
                      <td class="td-actions text-right">
                        <%= link_to edit_weightchange_path(weightchange), class: "btn btn-link btn-warning btn-just-icon edit" do %>
                          <i class="material-icons">edit</i>
                        <% end %>
                        <%= link_to weightchange_path(weightchange), method: :delete, remote: true, class: "btn btn-link btn-danger btn-just-icon remove" do %>
                            <i class="material-icons">close</i>
                        <% end %>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!--Chart-->
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header card-header-icon card-header-info">
            <div class="card-icon">
              <i class="material-icons">timeline</i>
            </div>
            <h4 class="card-title">WeightRecord</h4>
          </div>
          <div class="card-body">
            <p class="text-center">
              体重推移 （<%= current_user.idealweight.start_day %> 〜 <%= current_user.idealweight.last_day %>）<br>
              Red:実績 / Blue:期待値
            </p>
            <div id="colouredBarsChart" class="ct-chart"></div>
          </div>
        </div>
      </div>
    </div>
    <script>
      var chart = new Chartist.Line('.ct-chart', {
        labels: <%= @labels.to_json.html_safe %>,
        series: [
          // 期待値
          <%= @idealweight_datas %>,
          // 実績
          <%= @datas %>,
        ]
      }, {
        high: <%= @max %> +1,
        low: <%= @minimum %> -2,
        // height: 200,
      });
      
      // こっから下よくわからん
      // Let's put a sequence number aside so we can use it in the event callbacks
      var seq = 0,
        delays = 80,
        durations = 500;
      
      // Once the chart is fully created we reset the sequence
      chart.on('created', function() {
        seq = 0;
      });
      
      // On each drawn element by Chartist we use the Chartist.Svg API to trigger SMIL animations
      chart.on('draw', function(data) {
        seq++;
      
        if(data.type === 'line') {
          // If the drawn element is a line we do a simple opacity fade in. This could also be achieved using CSS3 animations.
          data.element.animate({
            opacity: {
              // The delay when we like to start the animation
              begin: seq * delays + 1000,
              // Duration of the animation
              dur: durations,
              // The value where the animation should start
              from: 0,
              // The value where it should end
              to: 1
            }
          });
        } else if(data.type === 'label' && data.axis === 'x') {
          data.element.animate({
            y: {
              begin: seq * delays,
              dur: durations,
              from: data.y + 100,
              to: data.y,
              // We can specify an easing function from Chartist.Svg.Easing
              easing: 'easeOutQuart'
            }
          });
        } else if(data.type === 'label' && data.axis === 'y') {
          data.element.animate({
            x: {
              begin: seq * delays,
              dur: durations,
              from: data.x - 100,
              to: data.x,
              easing: 'easeOutQuart'
            }
          });
        } else if(data.type === 'point') {
          data.element.animate({
            x1: {
              begin: seq * delays,
              dur: durations,
              from: data.x - 10,
              to: data.x,
              easing: 'easeOutQuart'
            },
            x2: {
              begin: seq * delays,
              dur: durations,
              from: data.x - 10,
              to: data.x,
              easing: 'easeOutQuart'
            },
            opacity: {
              begin: seq * delays,
              dur: durations,
              from: 0,
              to: 1,
              easing: 'easeOutQuart'
            }
          });
        } else if(data.type === 'grid') {
          // Using data.axis we get x or y which we can use to construct our animation definition objects
          var pos1Animation = {
            begin: seq * delays,
            dur: durations,
            from: data[data.axis.units.pos + '1'] - 30,
            to: data[data.axis.units.pos + '1'],
            easing: 'easeOutQuart'
          };
      
          var pos2Animation = {
            begin: seq * delays,
            dur: durations,
            from: data[data.axis.units.pos + '2'] - 100,
            to: data[data.axis.units.pos + '2'],
            easing: 'easeOutQuart'
          };
      
          var animations = {};
          animations[data.axis.units.pos + '1'] = pos1Animation;
          animations[data.axis.units.pos + '2'] = pos2Animation;
          animations['opacity'] = {
            begin: seq * delays,
            dur: durations,
            from: 0,
            to: 1,
            easing: 'easeOutQuart'
          };
      
          data.element.animate(animations);
        }
      });
      
      // For the sake of the example we update the chart every time it's created with a delay of 10 seconds
      chart.on('created', function() {
        if(window.__exampleAnimateTimeout) {
          clearTimeout(window.__exampleAnimateTimeout);
          window.__exampleAnimateTimeout = null;
        }
        window.__exampleAnimateTimeout = setTimeout(chart.update.bind(chart), 12000);
      });
    </script>
   
  <% else %><!--初回必要情報未入力の場合そちらを入力させる-->
    <div class="text-center">
      <h3>体重管理を行う前に目標体重などを入力しておきましょう！</h3>
    </div>
    <div class="row">
      <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 mx-auto text-center">
        <%= image_tag "oji_1.png", class: "card-img-top", width: "50%;" %>
        <%= link_to "必要情報を入力する", "/idealweights/new", class: "btn btn-raised btn-primary" %>
      </div>
    </div>
  <% end %>
</div>

